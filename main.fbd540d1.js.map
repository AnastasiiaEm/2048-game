{"version":3,"sources":["scripts/main.js"],"names":["startBtn","document","querySelector","scoreCell","winCell","getElementsByClassName","messageLose","messageWin","messageStart","board","score","rows","columns","setGame","r","fieldRowCells","querySelectorAll","c","id","updateCell","restartGame","generateRandomCell","classList","contains","remove","innerText","add","hasEmptyCell","found","randomCellNum","Math","random","floor","getElementById","checkWin","length","checkLose","row","showLoseMessage","cell","num","value","filterZero","filter","slide","currentRow","i","push","slideLeft","slideRight","reverse","slideUp","slideDown","addEventListener","e","code","arrowLeft","arrowRight","arrowUp","arrowDown"],"mappings":"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","file":"main.fbd540d1.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst startBtn = document.querySelector('.start');\nconst scoreCell = document.querySelector('.game-score');\nconst winCell = document.getElementsByClassName('field-cell--2048');\n\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\n\nlet board = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\nlet score = 0;\nconst rows = 4;\nconst columns = 4;\n\nstartBtn.addEventListener('click', setGame);\n\nfunction setGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  for (let r = 0; r < rows; r++) {\n    const fieldRowCells = document\n      .querySelectorAll('.field-row')[r]\n      .querySelectorAll('.field-cell');\n\n    for (let c = 0; c < columns; c++) {\n      fieldRowCells[c].id = `${r}-${c}`;\n\n      updateCell(fieldRowCells[c], board[r][c]);\n    }\n  }\n\n  restartGame();\n  generateRandomCell();\n  generateRandomCell();\n}\n\nfunction restartGame() {\n  if (startBtn.classList.contains('start')) {\n    startBtn.classList.remove('start');\n    startBtn.innerText = 'Restart';\n    startBtn.classList.add('restart');\n\n    messageStart.classList.add('hidden');\n  } else {\n    messageLose.classList.add('hidden');\n  }\n\n  scoreCell.innerText = 0;\n}\n\nfunction hasEmptyCell() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction generateRandomCell() {\n  if (!hasEmptyCell()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const randomCellNum = Math.random() <= 0.1 ? 4 : 2;\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    if (board[r][c] === 0) {\n      board[r][c] = randomCellNum;\n      found = true;\n      updateCell(document.getElementById(`${r}-${c}`), randomCellNum);\n    }\n  }\n}\n\nfunction checkWin() {\n  if (winCell.length > 0) {\n    messageWin.classList.remove('hidden');\n  }\n}\n\nfunction checkLose() {\n  if (hasEmptyCell()) {\n    return false;\n  }\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === board[r][c + 1]) {\n        return false;\n      }\n    }\n  }\n\n  for (let c = 0; c < columns; c++) {\n    const row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    for (let r = 0; r < row.length; r++) {\n      if (row[r] === row[r + 1]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction showLoseMessage() {\n  messageLose.classList.remove('hidden');\n}\n\nfunction updateCell(cell, num) {\n  cell.innerText = '';\n  cell.classList.value = '';\n  cell.classList.add('field-cell');\n\n  if (num > 0) {\n    cell.innerText = num;\n\n    cell.classList.add(`field-cell--${num}`);\n  }\n}\n\ndocument.addEventListener('keydown', (e) => {\n  const arrowLeft = 'ArrowLeft';\n  const arrowRight = 'ArrowRight';\n  const arrowUp = 'ArrowUp';\n  const arrowDown = 'ArrowDown';\n\n  switch (e.code) {\n    case arrowLeft:\n      slideLeft();\n      break;\n    case arrowRight:\n      slideRight();\n      break;\n    case arrowUp:\n      slideUp();\n      break;\n    case arrowDown:\n      slideDown();\n      break;\n  }\n\n  generateRandomCell();\n  scoreCell.innerText = score;\n  checkWin();\n\n  if (checkLose()) {\n    showLoseMessage();\n  }\n});\n\nfunction filterZero(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction slide(row) {\n  let currentRow = filterZero(row);\n\n  for (let i = 0; i < currentRow.length - 1; i++) {\n    if (currentRow[i] === currentRow[i + 1]) {\n      currentRow[i] *= 2;\n      currentRow[i + 1] = 0;\n      score += currentRow[i];\n    }\n  }\n\n  currentRow = filterZero(currentRow);\n\n  while (currentRow.length < columns) {\n    currentRow.push(0);\n  }\n\n  return currentRow;\n}\n\nfunction slideLeft() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row = slide(row);\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      updateCell(document.getElementById(`${r}-${c}`), board[r][c]);\n    }\n  }\n}\n\nfunction slideRight() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row.reverse();\n\n    row = slide(row);\n\n    row.reverse();\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      updateCell(document.getElementById(`${r}-${c}`), board[r][c]);\n    }\n  }\n}\n\nfunction slideUp() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row = slide(row);\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      updateCell(document.getElementById(`${r}-${c}`), board[r][c]);\n    }\n  }\n}\n\nfunction slideDown() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n      updateCell(document.getElementById(`${r}-${c}`), board[r][c]);\n    }\n  }\n}\n"]}